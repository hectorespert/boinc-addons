name: Release

on:
  push:
    branches:
      - main

permissions:
  contents: write
  packages: write
  pages: write
  id-token: write

concurrency:
  group: "release-${{ github.ref }}"
  cancel-in-progress: false

jobs:
  lint:
    uses: ./.github/workflows/lint.yaml

  test:
    needs: lint
    uses: ./.github/workflows/operator.yaml

  find_changed:
    needs: test
    uses: ./.github/workflows/find-changed-addons.yaml
    with:
      monitored_files: 'build.yaml config.yaml Dockerfile operator'

  check_version:
    needs: find_changed
    if: needs.find_changed.outputs.changed == 'true'
    uses: ./.github/workflows/check-version.yaml
    with:
      changed_addons: ${{ needs.find_changed.outputs.changed_addons }}
      strict_check: true

  build:
    needs: [find_changed, check_version]
    if: needs.find_changed.outputs.changed == 'true'
    uses: ./.github/workflows/build-addons.yaml
    with:
      changed_addons: ${{ needs.find_changed.outputs.changed_addons }}
      test_mode: false

  create_release:
    needs: [find_changed, build, check_version]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: needs.find_changed.outputs.changed == 'true'
    name: Create release for ${{ matrix.addon }}
    strategy:
      matrix:
        addon: ${{ fromJson(needs.find_changed.outputs.changed_addons) }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up yq
        uses: mikefarah/yq@v4

      - name: Get addon version
        id: version
        run: |
          VERSION=$(yq e '.version' ${{ matrix.addon }}/config.yaml)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "tag=${{ matrix.addon }}-v$VERSION" >> $GITHUB_OUTPUT
          echo "Creating release: ${{ matrix.addon }}-v$VERSION"

      - name: Read CHANGELOG
        id: changelog
        run: |
          if [ -f "${{ matrix.addon }}/CHANGELOG.md" ]; then
            VERSION="${{ steps.version.outputs.version }}"
            # Extract the section for this version from CHANGELOG
            CHANGELOG_CONTENT=$(awk -v ver="$VERSION" '
              $0 ~ "^## " ver {flag=1; next}
              /^## [0-9]/ && flag {exit}
              flag {print}
            ' "${{ matrix.addon }}/CHANGELOG.md" | sed '/^$/d' || true)
            
            if [ -z "$CHANGELOG_CONTENT" ]; then
              CHANGELOG_CONTENT="No changelog available for this version."
            fi
          else
            CHANGELOG_CONTENT="No changelog file found."
          fi
          
          # Save changelog to file for multiline content
          echo "$CHANGELOG_CONTENT" > /tmp/changelog.txt

      - name: Create and push tag
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag -a "${{ steps.version.outputs.tag }}" -m "Release ${{ matrix.addon }} version ${{ steps.version.outputs.version }}"
          git push origin "${{ steps.version.outputs.tag }}"

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.version.outputs.tag }}
          name: ${{ matrix.addon }} v${{ steps.version.outputs.version }}
          body_path: /tmp/changelog.txt
          draft: false
          prerelease: false
          generate_release_notes: true

  post_bluesky:
    needs: [find_changed, create_release]
    runs-on: ubuntu-latest
    if: needs.find_changed.outputs.changed == 'true'
    name: Post release to Bluesky for ${{ matrix.addon }}
    strategy:
      matrix:
        addon: ${{ fromJson(needs.find_changed.outputs.changed_addons) }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v5

      - name: Set up yq
        uses: mikefarah/yq@v4

      - name: Get addon version
        id: version
        run: |
          VERSION=$(yq e '.version' ${{ matrix.addon }}/config.yaml)
          ADDON_NAME=$(yq e '.name' ${{ matrix.addon }}/config.yaml)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "tag=${{ matrix.addon }}-v$VERSION" >> $GITHUB_OUTPUT
          echo "name=$ADDON_NAME" >> $GITHUB_OUTPUT

      - name: Prepare Bluesky post
        id: bluesky_post
        run: |
          ADDON_NAME="${{ steps.version.outputs.name }}"
          VERSION="${{ steps.version.outputs.version }}"
          TAG="${{ steps.version.outputs.tag }}"
          RELEASE_URL="https://github.com/${{ github.repository }}/releases/tag/${TAG}"
          DOCS_URL="https://${{ github.repository_owner }}.github.io/boinc-addons"
          
          # Create multi-line post text
          cat << EOF > /tmp/bluesky_post.txt
          #HomeAssistant add-ons for #BOINC
          
          Contribute to scientific research projects from your Home Assistant instance.
          
          ðŸš€ New release available!

          ðŸ“¦ ${ADDON_NAME} v${VERSION}

          ðŸ”— Release: ${RELEASE_URL}

          To install it, read the documentation: ${DOCS_URL}
          EOF
          
          echo "post_text<<EOFPOST" >> $GITHUB_OUTPUT
          cat /tmp/bluesky_post.txt >> $GITHUB_OUTPUT
          echo "EOFPOST" >> $GITHUB_OUTPUT
          echo "release_url=${RELEASE_URL}" >> $GITHUB_OUTPUT

      - name: Post to Bluesky
        uses: myConsciousness/bluesky-post@v5
        with:
          text: ${{ steps.bluesky_post.outputs.post_text }}
          identifier: ${{ secrets.BLUESKY_IDENTIFIER }}
          password: ${{ secrets.BLUESKY_PASSWORD }}

